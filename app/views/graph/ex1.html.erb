<%- content_for(:head) do -%>
	<%= javascript_include_tag "http://mbostock.github.com/d3/d3.js" %>
	<%= javascript_include_tag "http://mbostock.github.com/d3/d3.layout.js" %>
	<%= javascript_include_tag "http://mbostock.github.com/d3/d3.geom.js" %>
<%- end -%>

<h1>Ex1 - images and layers</h1>

<div id="a">
	<script type="text/javascript">
        var js_array2 = [
		<% @people.each_with_index do |p, index| %>
			{"name":"<%= p.name %>","group":<%= p.group.to_s %>}<% unless ((index + 1) == @people.size) %>,<%end%>
		<% end %>]
		
        var links2 = [
		<% @links.each_with_index do |l, index| %>
			{"source":<%= l.source.to_s %>,"target":<%= l.target.to_s %>,"value":<%= l.value.to_s %>}<% unless ((index + 1) == @links.size) %>,<%end%>
		<% end %>]
		 
        var w = 960, h = 500
    
        var vis = d3.select("#a").append("svg:svg")
	        .attr("width", w)
	        .attr("height", h);
        
        var force = self.force = d3.layout.force()
	        .nodes(js_array2)
	        .links(links2)
	        .gravity(.05)
	        .distance(70)
	        .charge(-100)
	        .size([w, h])
	        .start();
        
        var link = vis.selectAll("line.link")
	        .data(links2)
	        .enter().append("svg:line")
	        .attr("class", "link")
	        .attr("x1", function(d) { return d.source.x; })
	        .attr("y1", function(d) { return d.source.y; })
	        .attr("x2", function(d) { return d.target.x; })
	        .attr("y2", function(d) { return d.target.y; });
        
        var node = vis.selectAll("g.node")
	        .data(js_array2)
	        .enter().append("svg:g")
	        .attr("class", "node")
	        .call(force.drag);
        
        node.append("svg:image")
	        .attr("class", "circle")
	        .attr("xlink:href", "https://d3nwyuy0nl342s.cloudfront.net/images/icons/public.png")
	        .attr("x", "-8px")
	        .attr("y", "-8px")
	        .attr("width", "16px")
	        .attr("height", "16px");
        
        node.append("svg:text")
	        .attr("class", "nodetext")
	        .attr("dx", 12)
	        .attr("dy", ".35em")
	        .text(function(d) { return d.name });
        
        force.on("tick", function() {
             link.attr("x1", function(d) { return d.source.x; })
	             .attr("y1", function(d) { return d.source.y; })
	             .attr("x2", function(d) { return d.target.x; })
	             .attr("y2", function(d) { return d.target.y; });
             
             node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
		});
	</script>
</div>
